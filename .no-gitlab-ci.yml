image: docker:latest
services:
- docker:dind

stages:
- build-backend-base
- build-frontend-base
- build-backend
- build-frontend
- test-backend
- test-frontend
- release-backend
- release-frontend

variables:
  # backend stuff
  BACKEND_BASE_IMAGE: gitlab.l3portal.de:5555/l3p-cv/lost/base/backend:0.1
  BACKEND_TEST_IMAGE: gitlab.l3portal.de:5555/l3p-cv/lost/test/backend:$CI_PIPELINE_ID
  BACKEND_RELEASE_IMAGE: gitlab.l3portal.de:5555/l3p-cv/lost/release/backend:$CI_COMMIT_TAG
  # frontend stuff
  FRONTEND_BASE_IMAGE: gitlab.l3portal.de:5555/l3p-cv/lost/base/frontend:0.1
  FRONTEND_TEST_IMAGE: gitlab.l3portal.de:5555/l3p-cv/lost/test/frontend:$CI_PIPELINE_ID
  FRONTEND_RELEASE_IMAGE: gitlab.l3portal.de:5555/l3p-cv/lost/release/frontend:$CI_COMMIT_TAG
  
before_script:
  #- apk add --update nodejs=8.11.4-r0 npm
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN gitlab.l3portal.de:5555

# base stuff
build-backend-base:
  stage: build-backend-base
  script:
    - docker build -t $BACKEND_BASE_IMAGE -f docker/lost-backend-base/Dockerfile .
    - docker push $BACKEND_BASE_IMAGE
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /lost-backend-base/

build-frontend-base:
  stage: build-frontend-base
  script:
    - docker build -t $FRONTEND_BASE_IMAGE -f docker/lost-frontend-base/Dockerfile .
    - docker push $FRONTEND_BASE_IMAGE
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /lost-frontend-base/

build-backend:
  stage: build-backend
  script:
    - docker pull $BACKEND_BASE_IMAGE
    - docker build --build-arg base_image=$BACKEND_BASE_IMAGE --pull -t $BACKEND_TEST_IMAGE -f docker/lost-backend/Dockerfile .
    - docker push $BACKEND_TEST_IMAGE
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /lost-backend-base/
      - $CI_COMMIT_MESSAGE =~ /lost-frontend-base/

build-frontend:
  stage: build-frontend
  script: 
    - echo "Build Frontend Dummy"
    # - docker pull $FRONTEND_BASE_IMAGE
    # - docker build --build-arg base_image=$FRONTEND_BASE_IMAGE --pull -t $FRONTEND_TEST_IMAGE -f docker/lost-frontend/Dockerfile .
    # - docker push $FRONTEND_TEST_IMAGE
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /lost-backend-base/
      - $CI_COMMIT_MESSAGE =~ /lost-frontend-base/

test-backend:
  stage: test-backend
  script:
    - echo "BACKEND TEST WILL BE HERE IN FUTURE :)"
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /lost-backend-base/
      - $CI_COMMIT_MESSAGE =~ /lost-frontend-base/

test-frontend:
  stage: test-frontend
  script:
    - echo "FRONTEND TEST WILL BE HERE IN FUTURE :)"
    # - docker pull $TEST_IMAGE
    # - docker run $TEST_IMAGE sh /code/test/test-l3pweb.sh
    # - docker run $TEST_IMAGE sh /code/test/test-l3py.sh
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /lost-backend-base/
      - $CI_COMMIT_MESSAGE =~ /lost-frontend-base/

release-backend:
  stage: release-backend
  script:
    - docker pull $BACKEND_TEST_IMAGE
    - docker tag $BACKEND_TEST_IMAGE $BACKEND_RELEASE_IMAGE
    - docker push $BACKEND_RELEASE_IMAGE
  only:
    - tags
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /lost-backend-base/
      - $CI_COMMIT_MESSAGE =~ /lost-frontend-base/

release-frontend:
  stage: release-frontend
  script:
    - docker pull $FRONTEND_TEST_IMAGE
    - docker tag $FRONTEND_TEST_IMAGE $FRONTEND_RELEASE_IMAGE
    - docker push $FRONTEND_RELEASE_IMAGE
  only:
    - tags
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /lost-backend-base/
      - $CI_COMMIT_MESSAGE =~ /lost-frontend-base/
