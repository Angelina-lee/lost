Getting Started
****************

About LOST
=================
LOST (Label Object and Save Time) is a **flexible** **web-based** framework
for **semi-automatic** image annotation.
It provides multiple annotation interfaces for fast image annotation.

LOST is **flexible** since it allows to run user defined annotation
pipelines where different
annotation interfaces/ tools and algorithms can be combined in one process.

It is **web-based** since the whole annotation process is visualized in
your browser.
You can quickly setup LOST with docker on your local machine or run it
on a web server to make an annotation process available to your
annotators around the world.
LOST allows to organize label trees, to monitor the state of an
annotation process and to do annotations inside the browser.

LOST was especially designed to model **semi-automatic** annotation
pipelines to speed up the annotation process.
Such a semi-automatic can be achieved by using AI generated annotation
proposals that are presented to an annotator inside the annotation tool.

Setup LOST
=================
LOST releases are hosted on DockerHub and shipped in Containers.
For a quick setup perform the following steps (these steps have been 
tested for Ubuntu):

1. Install docker on your machine or server:
    https://docs.docker.com/install/
2. Install docker-compose:
    https://docs.docker.com/compose/install/
3. Clone LOST:
    .. code-block:: bash

        git clone https://github.com/l3p-cv/lost.git
4. Run quick_setup script:
    .. code-block:: bash

        cd lost/docker/quick_setup/
        # python3 quick_setup.py path/to/install/lost lost_release
        python3 quick_setup.py ~/lost 0.0.0
5. Run LOST:
    .. code-block:: bash

        # Change to directory where LOST was installed in previous step
        cd ~/lost 
        # Start LOST
        docker-compose up
6. Open a browser and navigate to **localhost**


The pipeline idea
=================

A **LOST-Pipeline** consists of different elements that will be
processed in a defined order by the *LOST-Engine* to transform data in
the portal.

A *LOST-Pipeline* is defined by a **PipelineTemplate** and modeled as directed graph.
A *Pipeline* is an istance of a *PipelineTemplate*.
A *PipelineTemplate* may define a graph that consits of the following
**PipelineElements**:

* **Script**: A user defined script that transforms input data to output data.
* **Datasource**: Some kind of data that can be used as input
  :class:`api.script.Input` for a user defined Script.
* **AnnotationTask**: Some kind of an image annotation task performed by a
  human annotator.
* **Visualization**: Can display an image or html text in the web gui that was
  generated by a user defined script.
* **DataExport**: Provides a download link to a file that was generated by a
  script.
* **Loop**: A loop element points to another element in the *Pipeline* and creates
  a loop in the graph. A loop element implements the a similar behaviour as a while
  loop in a programming language.

.. _setup-lost:
A first example
================

How to define a pipeline?
-------------------------
.. literalinclude:: ../../examples/pipes/anno_all_imgs/anno_all_mia.json
   :language: json
   :emphasize-lines: 1
   :linenos:

How to write a script?
----------------------
.. literalinclude:: ../../examples/pipes/anno_all_imgs/anno_all_imgs.py
   :language: python
   :emphasize-lines: 16
   :linenos: